name: Deploy SSIS Packages to SSISDB

on:
  workflow_dispatch:

jobs:
  deploy-ssis:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate prerequisites
        shell: powershell
        env:
          ISDEPLOYMENTWIZARD: "C:\\Program Files (x86)\\Microsoft SQL Server\\160\\DTS\\Binn\\ISDeploymentWizard.exe"
          ISPAC_PATH: "${{ github.workspace }}\\HandsOnProjects\\Timesheet\\Packages\\Integration Services Project2\\bin\\Development\\Integration Services Project2.ispac"
        run: |
          # Check if ISDeploymentWizard exists
          if (-Not (Test-Path "${{ env.ISDEPLOYMENTWIZARD }}")) {
            throw "ISDeploymentWizard not found at: ${{ env.ISDEPLOYMENTWIZARD }}"
          }
          # Check if ISPAC file exists
          if (-Not (Test-Path "${{ env.ISPAC_PATH }}")) {
            throw "ISPAC file not found at: ${{ env.ISPAC_PATH }}"
          }
          Write-Host "Prerequisites validated successfully."

      - name: Create SSISDB folder if not exists
        shell: powershell
        env:
          SSIS_SERVER: "LAPTOP-938SNHB2\\MSSQLSERVER01"
          SSIS_FOLDER: "Automation"
        run: |
          # Load SQL Server module
          Import-Module -Name SqlServer -ErrorAction SilentlyContinue
          if (-Not (Get-Module -Name SqlServer)) {
            Write-Warning "SqlServer module not found. Ensure it is installed on the runner."
            exit 0  # Skip folder creation if module is unavailable
          }
          $server = "${{ env.SSIS_SERVER }}"
          $folder = "${{ env.SSIS_FOLDER }}"
          try {
            $ssisdb = Get-SqlSsisCatalog -ServerInstance $server
            if (-Not (Get-SqlSsisFolder -ServerInstance $server -FolderName $folder)) {
              New-SqlSsisFolder -ServerInstance $server -FolderName $folder
              Write-Host "Created SSISDB folder: $folder"
            } else {
              Write-Host "SSISDB folder already exists: $folder"
            }
          } catch {
            Write-Warning "Failed to create SSISDB folder: $_"
          }

      - name: Deploy SSIS .ispac to SSISDB
        shell: powershell
        env:
          ISDEPLOYMENTWIZARD: "C:\\Program Files (x86)\\Microsoft SQL Server\\160\\DTS\\Binn\\ISDeploymentWizard.exe"
          ISPAC_PATH: "${{ github.workspace }}\\HandsOnProjects\\Timesheet\\Packages\\Integration Services Project2\\bin\\Development\\Integration Services Project2.ispac"
          SSIS_SERVER: "LAPTOP-938SNHB2\\MSSQLSERVER01"
          SSIS_FOLDER: "Automation"
          SSIS_PROJECT: "Integration Services Project2"
          SSISDB_PATH: "/SSISDB/${{ env.SSIS_FOLDER }}/${{ env.SSIS_PROJECT }}"
        run: |
          Write-Host "Starting SSIS deployment..."
          Write-Host "ISPAC Path: ${{ env.ISPAC_PATH }}"
          Write-Host "Deploying to: ${{ env.SSISDB_PATH }}"
          
          # Run ISDeploymentWizard
          & "${{ env.ISDEPLOYMENTWIZARD }}" `
            /Silent `
            /ModelType:Project `
            /SourcePath:"${{ env.ISPAC_PATH }}" `
            /DestinationServer:"${{ env.SSIS_SERVER }}" `
            /DestinationPath:"${{ env.SSISDB_PATH }}"
          
          if ($LASTEXITCODE -ne 0) {
            throw "SSIS deployment failed with exit code $LASTEXITCODE"
          } else {
            Write-Host "SSIS deployment completed successfully."
          }