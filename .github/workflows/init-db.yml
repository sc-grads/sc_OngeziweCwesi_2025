name: Initialize Timesheet DB

on:
  workflow_dispatch:  # Allows manual trigger

jobs:
  init-db:
    runs-on: [self-hosted, windows]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Pinggy Host and Port
        id: extract
        shell: powershell
        run: |
          $uri = "${{ secrets.SQL_SERVER }}"
          $hostPort = $uri -replace '^tcp://', ''
          Write-Host "Extracted Host and Port: $hostPort"
          echo "PINGGY_HOSTPORT=$hostPort" | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Run SQL script
        env:
          SQL_USER: ${{ secrets.SQL_USER }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        shell: powershell
        run: |
          Write-Host "Running SQL script..."
          $sqlcmdPath = "sqlcmd"
          $sqlFile = "HandsOnProjects/Timesheet/sql/InitTimesheetDB.sql"
          $hostPort = "$env:PINGGY_HOSTPORT"

          # Verify sqlcmd is available
          if (!(Get-Command -Name $sqlcmdPath)) {
              Write-Error "sqlcmd not found in PATH. Ensure SQL Server tools are installed."
              exit 1
          }

          # Verify SQL file exists
          if (!(Test-Path $sqlFile)) {
              Write-Error "SQL file not found at $sqlFile"
              exit 1
          }

          # Run sqlcmd
          try {
              & $sqlcmdPath -S $hostPort -U $env:SQL_USER -P $env:SQL_PASSWORD -i $sqlFile
              Write-Host "SQL script executed successfully."
          } catch {
              Write-Error "Failed to execute SQL script: $($_.Exception.Message)"
              exit 1
          }